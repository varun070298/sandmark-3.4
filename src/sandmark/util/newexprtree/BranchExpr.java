package sandmark.util.newexprtree;

/** Parent class for the branch operations.
 *  Branches have other Exprs as their targets.
 *  When a branch targets a given Expr, that means that when you
 *  reproduce the bytecode, the resulting branch instruction
 *  will target the first instruction generated by the target Expr.
 *  Initially, BranchExprs created by ExprTreeCFG will point to InstructionHandles,
 *  but only until they are patched with the corresponding Exprs.
 *  BranchExprs are the only mutable Exprs, since their targets can be changed.
 */
public abstract class BranchExpr extends Expr{
   protected org.apache.bcel.generic.InstructionHandle handleTarget;
   private Expr exprTarget;

   public BranchExpr(org.apache.bcel.generic.InstructionHandle target){
      handleTarget = target;
   }

   public BranchExpr(Expr target){
      exprTarget = target;
   }

   protected org.apache.bcel.generic.InstructionHandle getHandleTarget(){
      return handleTarget;
   }

   /** Resets the target of this BranchExpr.
    */
   public final void setTarget(Expr target){
      exprTarget = target;
   }

   /** Returns the target expression of this BranchExpr.
    */
   public final Expr getTarget(){
      return exprTarget;
   }
}
